package com.web.cementerio.pojo.annotations;

// Generated 26/07/2012 03:22:37 PM by Hibernate Tools 3.4.0.CR1

import java.util.Date;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * Cotcolor generated by hbm2java
 */
@Entity
@Table(name = "cotcolor")
public class Cotcolor implements java.io.Serializable {

	/**
	 * 
	 */
	private static final long serialVersionUID = -4747291859081418617L;
	private int idcolor;
	private Setestado setestado;
	private Setusuario setusuario;
	private String nombre;
	private String descripcion;
	private String hex;
	private Date fecharegistro;
	private String iplog;
	//private Set<Petmascotacolor> petmascotacolors = new HashSet<Petmascotacolor>(0);

	public Cotcolor() {
	}

	public Cotcolor(int idcolor, String nombre, String hex, Date fecharegistro) {
		this.idcolor = idcolor;
		this.nombre = nombre;
		this.hex = hex;
		this.fecharegistro = fecharegistro;
	}

	public Cotcolor(int idcolor, Setestado setestado, Setusuario setusuario,
			String nombre, String descripcion, String hex, Date fecharegistro,
			String iplog/*, Set<Petmascotacolor> petmascotacolors*/) {
		this.idcolor = idcolor;
		this.setestado = setestado;
		this.setusuario = setusuario;
		this.nombre = nombre;
		this.descripcion = descripcion;
		this.hex = hex;
		this.fecharegistro = fecharegistro;
		this.iplog = iplog;
		//this.petmascotacolors = petmascotacolors;
	}

	@Id
	@Column(name = "idcolor", unique = true, nullable = false)
	public int getIdcolor() {
		return this.idcolor;
	}

	public void setIdcolor(int idcolor) {
		this.idcolor = idcolor;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "idestado")
	public Setestado getSetestado() {
		return this.setestado;
	}

	public void setSetestado(Setestado setestado) {
		this.setestado = setestado;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "idusuario")
	public Setusuario getSetusuario() {
		return this.setusuario;
	}

	public void setSetusuario(Setusuario setusuario) {
		this.setusuario = setusuario;
	}

	@Column(name = "nombre", nullable = false, length = 30)
	public String getNombre() {
		return this.nombre;
	}

	public void setNombre(String nombre) {
		this.nombre = nombre;
	}

	@Column(name = "descripcion", length = 100)
	public String getDescripcion() {
		return this.descripcion;
	}

	public void setDescripcion(String descripcion) {
		this.descripcion = descripcion;
	}

	@Column(name = "hex", nullable = false, length = 10)
	public String getHex() {
		return this.hex;
	}

	public void setHex(String hex) {
		this.hex = hex;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "fecharegistro", nullable = false, length = 29)
	public Date getFecharegistro() {
		return this.fecharegistro;
	}

	public void setFecharegistro(Date fecharegistro) {
		this.fecharegistro = fecharegistro;
	}

	@Column(name = "iplog", length = 20)
	public String getIplog() {
		return this.iplog;
	}

	public void setIplog(String iplog) {
		this.iplog = iplog;
	}

	/*@OneToMany(fetch = FetchType.LAZY, mappedBy = "cotcolor", targetEntity = Petmascotacolor.class)
	public Set<?> getPetmascotacolors() {
		return this.petmascotacolors;
	}

	public void setPetmascotacolors(Set<Petmascotacolor> petmascotacolors) {
		this.petmascotacolors = petmascotacolors;
	}*/

	@Override
	public int hashCode() {
		final int prime = 31;
		int result = 1;
		result = prime * result
				+ ((setestado == null) ? 0 : setestado.getIdestado());
		result = prime * result
				+ ((descripcion == null) ? 0 : descripcion.hashCode());
		result = prime * result
				+ ((fecharegistro == null) ? 0 : fecharegistro.hashCode());
		result = prime * result + ((hex == null) ? 0 : hex.hashCode());
		result = prime * result + idcolor;
		result = prime * result + ((iplog == null) ? 0 : iplog.hashCode());
		result = prime * result + ((nombre == null) ? 0 : nombre.hashCode());
		result = prime * result
				+ ((setusuario == null) ? 0 : setusuario.getIdusuario());
		return result;
	}

	@Override
	public boolean equals(Object obj) {
		if (obj == null)
			return false;
		if (!(obj instanceof Cotcolor))
            return false;
		
		Cotcolor other = (Cotcolor) obj;
		if (setestado == null) {
			if (other.setestado != null)
				return false;
		} else if (setestado.getIdestado() != other.setestado.getIdestado())
			return false;
		if (descripcion == null) {
			if (other.descripcion != null)
				return false;
		} else if (!descripcion.equals(other.descripcion))
			return false;
		if (fecharegistro == null) {
			if (other.fecharegistro != null)
				return false;
		} else if (!fecharegistro.equals(other.fecharegistro))
			return false;
		if (hex == null) {
			if (other.hex != null)
				return false;
		} else if (!hex.equals(other.hex))
			return false;
		if (idcolor != other.idcolor)
			return false;
		if (iplog == null) {
			if (other.iplog != null)
				return false;
		} else if (!iplog.equals(other.iplog))
			return false;
		if (nombre == null) {
			if (other.nombre != null)
				return false;
		} else if (!nombre.equals(other.nombre))
			return false;
		if (setusuario == null) {
			if (other.setusuario != null)
				return false;
		} else if (setusuario.getIdusuario() != other.setusuario.getIdusuario())
			return false;
		return true;
	}
	
	

}
