package com.web.cementerio.pojo.annotations;

// Generated 05/03/2014 11:20:16 AM by Hibernate Tools 3.4.0.CR1

import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.persistence.Transient;

/**
 * Petinformacion generated by hbm2java
 */
@Entity
@Table(name = "petinformacion")
public class Petinformacion implements java.io.Serializable, Cloneable {

	/**
	 * 
	 */
	private static final long serialVersionUID = 432554490645345420L;
	private int idinformacion;
	private Setestado setestado;
	private Setusuario setusuario;
	private String quienessomos;
	private String mision;
	private String vision;
	private String antecendentes;
	private Date fecharegistro;
	private Date fechamodificacion;
	private String iplog;
	private String tag;
	private Set<Petfotoinformacion> petfotoinformaciones = new HashSet<Petfotoinformacion>(0);

	public Petinformacion() {
	}

	public Petinformacion(int idinformacion, String quienessomos,
			Date fecharegistro) {
		this.idinformacion = idinformacion;
		this.quienessomos = quienessomos;
		this.fecharegistro = fecharegistro;
	}

	public Petinformacion(int idinformacion, Setestado setestado,
			Setusuario setusuario, String quienessomos, String mision,
			String vision, String antecendentes, String rutafoto,String fotoantecedentes,
			String fotoquienessomos,Date fecharegistro,Date fechamodificacion,
			String iplog, String tag, Set<Petfotoinformacion> petfotoinformaciones) {
		this.idinformacion = idinformacion;
		this.setestado = setestado;
		this.setusuario = setusuario;
		this.quienessomos = quienessomos;
		this.mision = mision;
		this.vision = vision;
		this.antecendentes = antecendentes;
		this.fecharegistro = fecharegistro;
		this.fechamodificacion = fechamodificacion;
		this.iplog = iplog;
		this.tag = tag;
		this.petfotoinformaciones = petfotoinformaciones;		
	}

	@Id
	@Column(name = "idinformacion", unique = true, nullable = false)
	public int getIdinformacion() {
		return this.idinformacion;
	}

	public void setIdinformacion(int idinformacion) {
		this.idinformacion = idinformacion;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "idestado")
	public Setestado getSetestado() {
		return this.setestado;
	}

	public void setSetestado(Setestado setestado) {
		this.setestado = setestado;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "idusuario")
	public Setusuario getSetusuario() {
		return this.setusuario;
	}

	public void setSetusuario(Setusuario setusuario) {
		this.setusuario = setusuario;
	}

	@Column(name = "quienessomos", nullable = false, length = 2000)
	public String getQuienessomos() {
		return this.quienessomos;
	}

	public void setQuienessomos(String quienessomos) {
		this.quienessomos = quienessomos;
	}
	
	@Transient
	public String getQuienessomosNoTags() {
		return this.quienessomos != null ? this.quienessomos.replaceAll("\\<.*?\\>", "") : this.quienessomos;
	}
	
	@Column(name = "mision", length = 2000)
	public String getMision() {
		return this.mision;
	}

	public void setMision(String mision) {
		this.mision = mision;
	}

	@Column(name = "vision", length = 2000)
	public String getVision() {
		return this.vision;
	}

	public void setVision(String vision) {
		this.vision = vision;
	}

	
	@Column(name = "antecendentes", length = 5000)
	public String getAntecendentes() {
		return this.antecendentes;
	}

	public void setAntecendentes(String antecendentes) {
		this.antecendentes = antecendentes;
	}

	
	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "fecharegistro", nullable = false, length = 29)
	public Date getFecharegistro() {
		return this.fecharegistro;
	}

	public void setFecharegistro(Date fecharegistro) {
		this.fecharegistro = fecharegistro;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "fechamodificacion", nullable = false, length = 29)
	public Date getFechamodificacion() {
		return this.fechamodificacion;
	}
	
	public void setFechamodificacion(Date fechamodificacion) {
		this.fechamodificacion = fechamodificacion;
	}
	
	@Column(name = "iplog", length = 20)
	public String getIplog() {
		return this.iplog;
	}

	public void setIplog(String iplog) {
		this.iplog = iplog;
	}

	@Column(name = "tag", length = 200)
	public String getTag() {
		return this.tag;
	}

	public void setTag(String tag) {
		this.tag = tag;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "petinformacion", targetEntity=Petfotoinformacion.class)
	public Set<Petfotoinformacion> getPetfotoinformaciones() {
		return this.petfotoinformaciones;
	}

	public void setPetfotoinformaciones(Set<Petfotoinformacion> petfotoinformaciones) {
		this.petfotoinformaciones = petfotoinformaciones;
	}

	@Override
	protected Object clone() throws CloneNotSupportedException{
	  Petinformacion petinformacion = (Petinformacion) super.clone();
	  return petinformacion;
	}
	
	public Petinformacion clonar() throws Exception{
		return (Petinformacion)this.clone();
	}

	@Override
	public int hashCode() {
		final int prime = 31;
		int result = 1;
		result = prime * result + ((mision == null) ? 0 : mision.hashCode());
		result = prime * result
				+ ((quienessomos == null) ? 0 : quienessomos.hashCode());
		result = prime * result + ((tag == null) ? 0 : tag.hashCode());
		result = prime * result + ((vision == null) ? 0 : vision.hashCode());
		return result;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj)
			return true;
		if (obj == null)
			return false;
		if (getClass() != obj.getClass())
			return false;
		Petinformacion other = (Petinformacion) obj;
		if (mision == null) {
			if (other.mision != null)
				return false;
		} else if (!mision.equals(other.mision))
			return false;
		if (quienessomos == null) {
			if (other.quienessomos != null)
				return false;
		} else if (!quienessomos.equals(other.quienessomos))
			return false;
		if (tag == null) {
			if (other.tag != null)
				return false;
		} else if (!tag.equals(other.tag))
			return false;
		if (vision == null) {
			if (other.vision != null)
				return false;
		} else if (!vision.equals(other.vision))
			return false;
		return true;
	}
	
	
	
	
	
}
