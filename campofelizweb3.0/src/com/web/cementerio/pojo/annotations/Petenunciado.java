package com.web.cementerio.pojo.annotations;

// Generated 05/03/2014 11:20:16 AM by Hibernate Tools 3.4.0.CR1

import java.util.Date;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * Petenunciado generated by hbm2java
 */
@Entity
@Table(name = "petenunciado")
public class Petenunciado implements java.io.Serializable, Cloneable {

	/**
	 * 
	 */
	private static final long serialVersionUID = 2633452523039079616L;
	private int idenunciado;
	private Setestado setestado;
	private Setusuario setusuario;
	private Character tipo;
	private String descripcion;
	private Integer idpadre;
	private Integer orden;
	private Date fecharegistro;
	private Date fechamodificacion;
	private String iplog;
	private String tag;

	public Petenunciado() {
	}

	public Petenunciado(int idenunciado, Date fecharegistro) {
		this.idenunciado = idenunciado;
		this.fecharegistro = fecharegistro;
	}

	public Petenunciado(int idenunciado, Setestado setestado,
			Setusuario setusuario, Character tipo, String descripcion,
			Integer idpadre, Integer orden,Date fecharegistro, Date fechamodificacion, String iplog, String tag) {
		this.idenunciado = idenunciado;
		this.setestado = setestado;
		this.setusuario = setusuario;
		this.tipo = tipo;
		this.descripcion = descripcion;
		this.idpadre = idpadre;
		this.orden = orden;
		this.fecharegistro = fecharegistro;
		this.fechamodificacion = fechamodificacion;
		this.iplog = iplog;
		this.tag = tag;
	}

	@Id
	@Column(name = "idenunciado", unique = true, nullable = false)
	public int getIdenunciado() {
		return this.idenunciado;
	}

	public void setIdenunciado(int idenunciado) {
		this.idenunciado = idenunciado;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "idestado")
	public Setestado getSetestado() {
		return this.setestado;
	}

	public void setSetestado(Setestado setestado) {
		this.setestado = setestado;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "idusuario")
	public Setusuario getSetusuario() {
		return this.setusuario;
	}

	public void setSetusuario(Setusuario setusuario) {
		this.setusuario = setusuario;
	}

	@Column(name = "tipo", length = 1)
	public Character getTipo() {
		return this.tipo;
	}

	public void setTipo(Character tipo) {
		this.tipo = tipo;
	}

	@Column(name = "descripcion", length = 2000)
	public String getDescripcion() {
		return this.descripcion;
	}

	public void setDescripcion(String descripcion) {
		this.descripcion = descripcion;
	}

	@Column(name = "idpadre")
	public Integer getIdpadre() {
		return this.idpadre;
	}

	public void setIdpadre(Integer idpadre) {
		this.idpadre = idpadre;
	}

	@Column(name = "orden")
	public Integer getOrden() {
		return orden;
	}

	public void setOrden(Integer orden) {
		this.orden = orden;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "fecharegistro", nullable = false, length = 29)
	public Date getFecharegistro() {
		return this.fecharegistro;
	}

	public void setFecharegistro(Date fecharegistro) {
		this.fecharegistro = fecharegistro;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "fechamodificacion",  length = 29)
	public Date getFechamodificacion() {
		return this.fechamodificacion;
	}

	public void setFechamodificacion(Date fechamodificacion) {
		this.fechamodificacion = fechamodificacion;
	}
	
	@Column(name = "iplog", length = 20)
	public String getIplog() {
		return this.iplog;
	}

	public void setIplog(String iplog) {
		this.iplog = iplog;
	}

	@Column(name = "tag", length = 200)
	public String getTag() {
		return this.tag;
	}

	public void setTag(String tag) {
		this.tag = tag;
	}

	@Override
	protected Object clone() throws CloneNotSupportedException{
	  Petenunciado Petenunciado = (Petenunciado) super.clone();
	  
	  return Petenunciado;
	}
	
	public Petenunciado clonar() throws Exception{
		return (Petenunciado)this.clone();
	}

	@Override
	public int hashCode() {
		final int prime = 31;
		int result = 1;
		result = prime * result
				+ ((descripcion == null) ? 0 : descripcion.hashCode());
		result = prime * result + idenunciado;
		result = prime * result + ((idpadre == null) ? 0 : idpadre.hashCode());
		result = prime * result + ((orden == null) ? 0 : orden.hashCode());
		result = prime * result + ((tag == null) ? 0 : tag.hashCode());
		result = prime * result + ((tipo == null) ? 0 : tipo.hashCode());
		return result;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj)
			return true;
		if (obj == null)
			return false;
		if (getClass() != obj.getClass())
			return false;
		Petenunciado other = (Petenunciado) obj;
		if (descripcion == null) {
			if (other.descripcion != null)
				return false;
		} else if (!descripcion.equals(other.descripcion))
			return false;
		if (idenunciado != other.idenunciado)
			return false;
		if (idpadre == null) {
			if (other.idpadre != null)
				return false;
		} else if (!idpadre.equals(other.idpadre))
			return false;
		if (orden == null) {
			if (other.orden != null)
				return false;
		} else if (!orden.equals(other.orden))
			return false;
		if (tag == null) {
			if (other.tag != null && !other.tag.equals(""))
				return false;
		} else if (!tag.equals(other.tag))
			return false;
		if (tipo == null) {
			if (other.tipo != null)
				return false;
		} else if (!tipo.equals(other.tipo))
			return false;
		return true;
	}
	
	
}
